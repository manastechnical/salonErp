{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\n// const signUpUrl = `${environment.apiUrl}/signup`;\nexport let SignupComponent = class SignupComponent {\n  constructor(apiService, http, router) {\n    this.apiService = apiService;\n    this.http = http;\n    this.router = router;\n    // user = {\n    //   email: '',\n    //   password: '',\n    //   name: '',\n    //   mobile: '',\n    //   gstNo:''\n    // };\n    this.user = new FormGroup({\n      email: new FormControl(\"\"),\n      password: new FormControl(\"\"),\n      name: new FormControl(\"\", [Validators.required]),\n      mobile: new FormControl(\"\"),\n      gstNo: new FormControl(\"\")\n    });\n    this.errorMessage = '';\n  }\n  get Name() {\n    return this.user.get(\"name\");\n  }\n  get Mobile() {\n    return this.user.get(\"mobile\");\n  }\n  get GstNo() {\n    return this.user.get(\"gstNo\");\n  }\n  get Email() {\n    return this.user.get(\"email\");\n  }\n  get Password() {\n    return this.user.get(\"password\");\n  }\n  onSubmit() {\n    this.apiService.signup(this.user).subscribe(response => {\n      // Handle successful registration\n      console.log('User registered successfully');\n      this.router.navigate(['/login']); // Redirect to login page\n    }, error => {\n      // Handle registration error\n      console.error('Error occurred during registration:', error);\n      this.errorMessage = error; // Assign the error message\n    });\n  }\n};\n\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["FormControl","FormGroup","Validators","Component","SignupComponent","constructor","apiService","http","router","user","email","password","name","required","mobile","gstNo","errorMessage","Name","get","Mobile","GstNo","Email","Password","onSubmit","signup","subscribe","response","console","log","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\salon\\angular-mysql-auth\\frontend\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { environment } from '../../environments/environment';\nimport { FormControl, FormGroup,Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\n\n// const signUpUrl = `${environment.apiUrl}/signup`;\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent {\n  // user = {\n  //   email: '',\n  //   password: '',\n  //   name: '',\n  //   mobile: '',\n  //   gstNo:''\n  // };\n\n  user = new FormGroup({\n    email: new FormControl(\"\"),\n    password: new FormControl(\"\"),\n    name: new FormControl(\"\",[Validators.required]),\n    mobile: new FormControl(\"\"),\n    gstNo: new FormControl(\"\")\n  })\n\n  errorMessage : string = '';\n\n  constructor(private apiService: ApiService,private http: HttpClient, private router: Router) {}\n\n  get Name():FormControl{\n    return this.user.get(\"name\") as FormControl;\n  }\n  get Mobile():FormControl{\n    return this.user.get(\"mobile\") as FormControl;\n  }\n  get GstNo():FormControl{\n    return this.user.get(\"gstNo\") as FormControl;\n  }\n  get Email():FormControl{\n    return this.user.get(\"email\") as FormControl;\n  }\n  get Password():FormControl{\n    return this.user.get(\"password\") as FormControl;\n  }\n\n  onSubmit() {\n    this.apiService.signup(this.user).subscribe(\n      (response) => {\n        // Handle successful registration\n        console.log('User registered successfully');\n        this.router.navigate(['/login']); // Redirect to login page\n      },\n      (error) => {\n        // Handle registration error\n        console.error('Error occurred during registration:', error);\n        this.errorMessage = error; // Assign the error message\n\n      }\n    );\n  }\n\n\n}\n"],"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,EAACC,UAAU,QAAQ,gBAAgB;AAClE,SAASC,SAAS,QAAQ,eAAe;AAKzC;AAQO,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAmB1BC,YAAoBC,UAAsB,EAASC,IAAgB,EAAUC,MAAc;IAAvE,KAAAF,UAAU,GAAVA,UAAU;IAAqB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAlBnF;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,KAAAC,IAAI,GAAG,IAAIR,SAAS,CAAC;MACnBS,KAAK,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC1BW,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,CAAC;MAC7BY,IAAI,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MAC/CC,MAAM,EAAE,IAAId,WAAW,CAAC,EAAE,CAAC;MAC3Be,KAAK,EAAE,IAAIf,WAAW,CAAC,EAAE;KAC1B,CAAC;IAEF,KAAAgB,YAAY,GAAY,EAAE;EAEoE;EAE9F,IAAIC,IAAIA,CAAA;IACN,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,MAAM,CAAgB;EAC7C;EACA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAAC,QAAQ,CAAgB;EAC/C;EACA,IAAIE,KAAKA,CAAA;IACP,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAC,OAAO,CAAgB;EAC9C;EACA,IAAIG,KAAKA,CAAA;IACP,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAC,OAAO,CAAgB;EAC9C;EACA,IAAII,QAAQA,CAAA;IACV,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAC,UAAU,CAAgB;EACjD;EAEAK,QAAQA,CAAA;IACN,IAAI,CAACjB,UAAU,CAACkB,MAAM,CAAC,IAAI,CAACf,IAAI,CAAC,CAACgB,SAAS,CACxCC,QAAQ,IAAI;MACX;MACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,EACAC,KAAK,IAAI;MACR;MACAH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,IAAI,CAACd,YAAY,GAAGc,KAAK,CAAC,CAAC;IAE7B,CAAC,CACF;EACH;CAGD;;AAtDY1B,eAAe,GAAA2B,UAAA,EAN3B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EAEW9B,eAAe,CAsD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}