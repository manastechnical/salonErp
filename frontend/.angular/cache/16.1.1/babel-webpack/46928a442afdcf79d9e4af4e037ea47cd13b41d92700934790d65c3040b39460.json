{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"../session.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(apiService, sessionService, router) {\n    this.apiService = apiService;\n    this.sessionService = sessionService;\n    this.router = router;\n    this.user = new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(15)])\n    });\n    this.errorMessage = '';\n  }\n  ngOnInit() {}\n  get Email() {\n    return this.user.get(\"email\");\n  }\n  get Password() {\n    return this.user.get(\"password\");\n  }\n  login() {\n    this.apiService.login(this.user.value).subscribe(response => {\n      if (response) {\n        this.sessionService.setSession(response.token, response.userId); // Set token in session\n        this.router.navigate(['/dashboard']); // Redirect to dashboard page\n      }\n    }, error => {\n      console.error('Error occurred during login:', error);\n      this.errorMessage = 'Invalid credentials. Please try again.';\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.SessionService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 2,\n  consts: [[1, \"login-container\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-center\"], [\"routerLink\", \"/signup\"], [1, \"error-message\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"form\", 7, 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(21, \"div\", 15)(22, \"p\");\n      i0.ɵɵtext(23, \"Don't have an account? \");\n      i0.ɵɵelementStart(24, \"a\", 16);\n      i0.ɵɵtext(25, \"Sign up\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.user);\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 10% auto;\\n    padding: 20px;\\n    background-color: #f2f2f2;\\n    border-radius: 5px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n  input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 90%;\\n    padding: 10px;\\n    border-radius: 5px;\\n    border: 1px solid #ccc;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    display: block;\\n    width: 50%;\\n    padding: 10px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsdUNBQXVDO0VBQ3pDOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGlCQUFpQjtFQUNuQjs7RUFFQTs7SUFFRSxVQUFVO0lBQ1YsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsVUFBVTtJQUNWLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luOiAxMCUgYXV0bztcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgfVxuICBcbiAgaDIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBcbiAgLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgfVxuICBcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","apiService","sessionService","router","user","email","required","password","minLength","maxLength","ngOnInit","Email","get","Password","login","value","subscribe","response","setSession","token","userId","navigate","error","console","ɵɵdirectiveInject","i1","ApiService","i2","SessionService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_3_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_9_listener","ɵɵelement","ɵɵproperty"],"sources":["D:\\salon\\angular-mysql-auth\\frontend\\src\\app\\login\\login.component.ts","D:\\salon\\angular-mysql-auth\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SessionService } from '../session.service';\nimport { ApiService } from '../api.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  user = new FormGroup({\n    email: new FormControl(\"\",[Validators.required,Validators.email]),\n    password: new FormControl(\"\",[Validators.required,Validators.minLength(5),Validators.maxLength(15)]),    \n  })\n  \n  errorMessage : string = '';\n\n  constructor(\n    private apiService: ApiService,\n    private sessionService: SessionService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  get Email():FormControl{\n    return this.user.get(\"email\") as FormControl;\n  }\n\n  get Password():FormControl{\n    return this.user.get(\"password\") as FormControl;\n  }\n\n  login(): void {\n    this.apiService.login(this.user.value).subscribe(\n      (response) => {\n        if (response ) {\n          this.sessionService.setSession(response.token,response.userId); // Set token in session\n          this.router.navigate(['/dashboard']); // Redirect to dashboard page\n        }\n      },\n      (error) => {\n        console.error('Error occurred during login:', error);\n        this.errorMessage = 'Invalid credentials. Please try again.';\n      }\n    );\n  }\n\n\n\n}\n\n\n","<!-- <form (ngSubmit)=\"login()\">\n  <label>Email</label>\n  <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" value=\"prajesh@noesistech.com\" required>\n\n  <label>Password</label>\n  <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" value=\"interstellar\" required>\n\n  <button type=\"submit\">Login</button>\n</form> -->\n\n\n<div class=\"login-container\">\n  <h2>Login</h2>\n  <div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n\n <div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <form [formGroup]=\"user\" (ngSubmit)=\"login()\" #loginForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" formControlName=\"email\">\n              \n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" formControlName=\"password\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n  <div class=\"text-center\">\n    <p>Don't have an account? <a routerLink=\"/signup\">Sign up</a></p>\n  </div>\n  \n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}