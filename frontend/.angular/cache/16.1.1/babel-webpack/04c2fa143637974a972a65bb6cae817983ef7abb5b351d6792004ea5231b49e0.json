{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.tokenKey = 'token';\n    this.userIdKey = 'userId';\n  }\n  isLoggedIn() {\n    return sessionStorage.getItem(this.tokenKey) !== null;\n  }\n  setSession(token) {\n    sessionStorage.setItem(this.tokenKey, token);\n    se;\n  }\n  logout() {\n    sessionStorage.removeItem(this.tokenKey);\n  }\n  getLoggedInUserId() {\n    return sessionStorage.getItem(this.userIdKey);\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)();\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","tokenKey","userIdKey","isLoggedIn","sessionStorage","getItem","setSession","token","setItem","se","logout","removeItem","getLoggedInUserId","factory","ɵfac","providedIn"],"sources":["D:\\salon\\angular-mysql-auth\\frontend\\src\\app\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private tokenKey = 'token';\n  private userIdKey = 'userId';\n\n  constructor() {}\n\n  isLoggedIn(): boolean {\n    return sessionStorage.getItem(this.tokenKey) !== null;\n  }\n\n  setSession(token: string): void {\n    sessionStorage.setItem(this.tokenKey, token);\n    se\n  }\n\n  logout(): void {\n    sessionStorage.removeItem(this.tokenKey);\n  }\n\n  getLoggedInUserId(): string | null {\n    return sessionStorage.getItem(this.userIdKey);\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAIzBC,YAAA;IAHQ,KAAAC,QAAQ,GAAG,OAAO;IAClB,KAAAC,SAAS,GAAG,QAAQ;EAEb;EAEfC,UAAUA,CAAA;IACR,OAAOC,cAAc,CAACC,OAAO,CAAC,IAAI,CAACJ,QAAQ,CAAC,KAAK,IAAI;EACvD;EAEAK,UAAUA,CAACC,KAAa;IACtBH,cAAc,CAACI,OAAO,CAAC,IAAI,CAACP,QAAQ,EAAEM,KAAK,CAAC;IAC5CE,EAAE;EACJ;EAEAC,MAAMA,CAAA;IACJN,cAAc,CAACO,UAAU,CAAC,IAAI,CAACV,QAAQ,CAAC;EAC1C;EAEAW,iBAAiBA,CAAA;IACf,OAAOR,cAAc,CAACC,OAAO,CAAC,IAAI,CAACH,SAAS,CAAC;EAC/C;;AArBWH,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}