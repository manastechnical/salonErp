{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionService {\n  constructor() {\n    this.tokenKey = 'token';\n  }\n  isLoggedIn() {\n    return sessionStorage.getItem(this.tokenKey) !== null;\n  }\n  setSession(token) {\n    sessionStorage.setItem(this.tokenKey, token);\n  }\n  logout() {\n    sessionStorage.removeItem(this.tokenKey);\n  }\n}\nSessionService.ɵfac = function SessionService_Factory(t) {\n  return new (t || SessionService)();\n};\nSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionService,\n  factory: SessionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SessionService","constructor","tokenKey","isLoggedIn","sessionStorage","getItem","setSession","token","setItem","logout","removeItem","factory","ɵfac","providedIn"],"sources":["D:\\salon\\angular-mysql-auth\\frontend\\src\\app\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  private tokenKey = 'token';\n\n  constructor() {}\n\n  isLoggedIn(): boolean {\n    return sessionStorage.getItem(this.tokenKey) !== null;\n  }\n\n  setSession(token: string): void {\n    sessionStorage.setItem(this.tokenKey, token);\n  }\n\n  logout(): void {\n    sessionStorage.removeItem(this.tokenKey);\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAGzBC,YAAA;IAFQ,KAAAC,QAAQ,GAAG,OAAO;EAEX;EAEfC,UAAUA,CAAA;IACR,OAAOC,cAAc,CAACC,OAAO,CAAC,IAAI,CAACH,QAAQ,CAAC,KAAK,IAAI;EACvD;EAEAI,UAAUA,CAACC,KAAa;IACtBH,cAAc,CAACI,OAAO,CAAC,IAAI,CAACN,QAAQ,EAAEK,KAAK,CAAC;EAC9C;EAEAE,MAAMA,CAAA;IACJL,cAAc,CAACM,UAAU,CAAC,IAAI,CAACR,QAAQ,CAAC;EAC1C;;AAfWF,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}